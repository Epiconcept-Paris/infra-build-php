#!/bin/sh
#
#	multi/run - Run docker container from anywhere
#
Prg=`basename $0`
Dir=`dirname $0`
IniPwd=$PWD
DocRoot=`realpath "$1" 2>/dev/null`

Path() { realpath --relative-to=$IniPwd $1; }
test "$Dir" || Dir=`dirname \`realpath $0\``
expr "$Dir" : / >/dev/null && Dir=`Path $Dir`
test "$Dir" = '.' || cd "$Dir"
Prg=`Path "$Prg"`

test -d pkgs || { echo "$Prg: missing '`Path pkgs`' directory." >&2; exit 1; }

PATH="$PATH:"	# dash wants $PWD in the path for the '.' command
SrvConf=`Path srvconf`
test -f srvconf && . srvconf || { echo "$Prg: missing '$SrvConf'" >&2; exit 1; }
test "$Port" || { echo "$Prg: missing 'Port=...' in $SrvConf"; exit 2; }

if [ "$1" ]; then
    test -d "$DocRoot" || { echo "$Prg: '$1' is not a directory" >&2; exit 1; }
else
    test -d www && DocRoot="$PWD/www" || { echo "$Prg: missing '`Path www`' directory." >&2; exit 1; }
fi

test -d logs || mkdir logs

if docker ps | grep -q $MULTI_NAME; then
    echo "Stopping the '$MULTI_NAME' container..."
    docker stop $MULTI_NAME >/dev/null
fi
if [ "$http_proxy" -a "$https_proxy" ]; then
    Env="--env http_proxy=$http_proxy --env https_proxy=$https_proxy"
fi
Opt='-d'	# NOTE: multi/bake expects next line to start with Cmd="
Cmd="docker run $Opt -p $Port:$Port -v $PWD:$MULTI_TOP/conf -v $DocRoot:$MULTI_TOP/www $Env --name $MULTI_NAME --rm $MULTI_IMG"
echo "Running the '$MULTI_NAME' container in background mode:\n    $Cmd"
$Cmd >/dev/null || { echo "\aFAILED to run the '$MULTI_NAME' container!"; exit 1; }

Sec=0
while [ $Sec -le 30 ]
do
    sleep 1
    Sec=`expr $Sec + 1`
    test -f logs/docker-run.out || continue
    End=`grep -n '^Waiting for container stop' logs/docker-run.out`
    if [ "$End" ]; then
	End=`expr "$End" : '\([0-9]*\):'`
	sed -n "1,`expr $End - 1`p" logs/docker-run.out
	break
    fi
    docker ps | grep -q $MULTI_NAME || { Abort=y; break; }
done
if [ $Sec -gt 30 ]; then
    echo "Timed-out waiting for 'docker run ...' output" >&2
elif [ "$Abort" ]; then
    echo "The container stopped unexpectedly after $Sec seconds. Log contents:"
    sed 's/^/    /' logs/docker-run.out
else
    echo "Use:\n    docker stop $MULTI_NAME\nto stop the container"
fi
