#!/bin/sh
#
#	00-cli/install - Install php-cli files to $Top
#
# Skip install-pear install-sapi
# Discard install-build install-programs install-headers install-pdo-headers
for tgt in install-cli install-binaries install-modules install-pharcmd
do
    grep "^install_targets = .* $tgt" Makefile >/dev/null && Tgts="$Tgts $tgt"
done
test "$Dbg" && echo "Tgts=\"$Tgts\""
INSTALL_ROOT=$Top make$Tgts >$Logs/make-install_$Pkg.out 2>&1

#   Use function to avoid polluting global namespace
InstFiles()
{
    # global Bld Top Logs
    local Dir File Pkg Must Cmnt Name Path New Log

    while read Dir File Pkg Must Cmnt
    do
	test "$Dir" || continue					# Empty line
	expr "$Dir" : '[ 	]*#.*' >/dev/null && continue	# Comment 
	if [ ! -d $Bld/pkgs/$Pkg ]; then
	    echo "\aERROR: no Pkg=$Pkg in $Bld/pkgs (Dir=$Dir File=$File)"
	    continue
	fi
	test -f $Bld/pkgs/$Pkg/skip && continue
	Name=`expr "$Pkg" : '[0-9][0-9]-\(.*\)'`
	if [ ! -d $Top/$Dir ]; then
	    test "$Must" = 'y' && echo "\aERROR: no Dir=$Dir in $Top (File=$File Pkg=$Pkg)"
	    continue
	fi
	Path=`cd $Top; find $Dir -type f -name $File`
	if [ "$Path" -a -f "$Top/$Path" ]; then
	    New=$Bld/pkgs/$Pkg/top/`dirname $Path`
	    test -d $New || mkdir -p $New
	    Log=$Logs/make-install_$Name.out
	    test -f $Log || echo "Installing $Name package" >$Log
	    mv -v $Top/$Path $New >>$Log 2>&1
	elif [ "$Must" = 'y' ]; then
	    echo "\aERROR: no Path found in $Top for Dir=$Dir File=$File (Pkg=$Pkg)"
	    echo "Directory $Dir contains:"
	    (cd $Top; find $Dir -type f)
	fi
    done <$1
}

InstFiles $dir/moves

find $Top -type d -empty -delete -print | sed 's/^/find: removing empty directory /' >$Logs/rmed_$Pkg.out
find $Top/$ManDir -name '*.[1-9]' | xargs gzip -n9
file $Top/usr/bin/* | sed -n 's/^\([^:]*\): *ELF .*$/\1/p' | xargs -r strip -v >$Logs/striped_$Pkg.out
find $Top -name '*.so' | xargs -r strip -v >>$Logs/striped_$Pkg.out
find $Top -name '*.so' | xargs -r chmod -x
