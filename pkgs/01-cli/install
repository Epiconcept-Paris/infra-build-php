#!/bin/sh
#
#	01-cli/install - Install php-cli files to $Top
#
Phar='install-pear-nozlib.phar'
Pear=$Top/$PearDir
if grep metadata_dir pear/$Phar >/dev/null; then
    sed -i "s;$Phar -d;$Phar -m /$PearDir -D /$DocDir/$Name -M /$ManDir -d;" Makefile
fi
mkdir -p $Pear
# Skip install-sapi install-build install-headers install-pdo-headers
for tgt in install-cli install-binaries install-programs install-modules install-pear install-pharcmd
do
    grep "^install_targets = .* $tgt" Makefile >/dev/null && Tgts="$Tgts $tgt"
done
test "$Dbg" && echo "Tgts=\"$Tgts\""
INSTALL_ROOT=$Top PHP_PEAR_SYSCONF_DIR=etc/pear make$Tgts >$Logs/make-install_$Pkg.out 2>&1

while read d f p m	# Dir File Pkg Mandatory
do
    test -f $Bld/pkgs/$p/skip && continue
    File=`cd $Top; find $d -type f -name $f`
    if [ "$File" -a -f "$Top/$File" ]; then
	Ext=$Bld/pkgs/$p/top/`dirname $File`
	test -d $Ext || mkdir -p $Ext
	Log=$Logs/make-install_$p.out
	test -f $Log || echo "Installing $p package" >$Log
	mv -v $Top/$File $Ext >>$Log 2>&1
    elif [ "$m" ]; then
	echo "\aERROR: no File found in $Top for d=$d f=$f (p=$p)"
	echo "Directory $d contains:"
	(cd $Top; find $d -type f)
    fi
done <$dir/moves

if [ -d pear/man ]; then
    cp -rp pear/man $Top/usr/share
    find $Top/$ManDir -name '*.[1-9]' | xargs gzip -n9
else
    echo "\aERROR: no directory pear/man in `pwd`"
fi

>$Logs/rmed_$Pkg.out

#   Cleanup PEAR (mostly 1.9.1) junk
rm -vf $Top/.filemap $Top/.depdb* $Top/.lock $Pear/.depdb* $Pear/.lock >>$Logs/rmed_$Pkg.out
for d in .channels .registry; do
    test -d $Top/$d || continue
    (cd $Top; find $d -type f | while read f; do
	test -f $Pear/$f && cmp $Top/$f $Pear/$f >/dev/null && rm -v $Top/$f
    done)
    find $Top/$d -depth -type d | xargs rmdir -v
done >>$Logs/rmed_$Pkg.out
rmdir -v $Pear/.registry/.channel.* >>$Logs/rmed_$Pkg.out

test -d $Top/$VarDir && find $Top/$VarDir -depth -type d | xargs -r rmdir -v >>$Logs/rmed_$Pkg.out

file $Top/usr/bin/* | sed -n 's/^\([^:]*\): *ELF .*$/\1/p' | xargs -r strip -v >$Logs/striped_$Pkg.out
find $Top -name '*.so' | xargs -r strip -v >>$Logs/striped_$Pkg.out
find $Top -name '*.so' | xargs -r chmod -x
find $Top -name '*.sh' | xargs -r chmod +x
