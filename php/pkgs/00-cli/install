#!/bin/sh
#
#	00-cli/install - Install php-cli files to $Top
#
# Skip install-pear install-sapi
# Discard install-build install-programs install-headers install-pdo-headers
for tgt in install-cli install-binaries install-modules install-pharcmd
do
    grep "^install_targets = .* $tgt" Makefile >/dev/null && Tgts="$Tgts $tgt"
done
test "$Dbg" && echo "Tgts=\"$Tgts\""
INSTALL_ROOT=$Top make$Tgts >$Logs/make-install_$Pkg.out 2>&1

#   Move file to other package
InstFile()
{
    # global Bld Top Logs
    local Dir File Pkg Must Name Path New Log

    Dir=$1
    File=$2
    Pkg=$3
    Must=$4
    if [ ! -d $Bld/pkgs/$Pkg ]; then
	echo "\aERROR: no Pkg=$Pkg in $Bld/pkgs (Dir=$Dir File=$File)"
	return
    fi
    test -f $Bld/pkgs/$Pkg/skip && return
    Name=`expr "$Pkg" : '[0-9]\{2\}-\(.*\)'`
    if [ ! -d $Top/$Dir ]; then
	test "$Must" = 'y' && echo "\aERROR: no Dir=$Dir in $Top (File=$File Pkg=$Pkg)"
	return
    fi
    Path=`cd $Top; find $Dir -type f -name $File`
    if [ "$Path" -a -f "$Top/$Path" ]; then
	New=$Bld/pkgs/$Pkg/top/`dirname $Path`
	test -d $New || mkdir -p $New
	Log=$Logs/make-install_$Name.out
	test -f $Log || echo "Installing $Name package" >$Log
	mv -v $Top/$Path $New >>$Log 2>&1
    elif [ "$Must" = 'y' ]; then
	echo "\aERROR: no Path found in $Top for Dir=$Dir File=$File (Pkg=$Pkg)"
	echo "Directory $Dir contains:"
	(cd $Top; find $Dir -type f)
    fi
}

InstFile usr/sbin      php-fpm              03-fpm   y
InstFile $ManDir/man8  php-fpm.8            03-fpm   y
InstFile usr/share/php status.html          03-fpm   y
InstFile etc/php$MMD   php-fpm.conf.default 03-fpm   y
InstFile etc/php$MMD   www.conf.default     03-fpm   -
InstFile usr/lib       mysql.so             04-mysql y

find $Top -type d -empty -delete -print | sed 's/^/find: removing empty directory /' >$Logs/rmed_$Pkg.out
find $Top/$ManDir -name '*.[1-9]' | xargs gzip -n9
file $Top/usr/bin/* | sed -n 's/^\([^:]*\): *ELF .*$/\1/p' | xargs -r strip -v >$Logs/striped_$Pkg.out
find $Top -name '*.so' | xargs -r strip -v >>$Logs/striped_$Pkg.out
find $Top -name '*.so' | xargs -r chmod -x

test "$MM" && echo "extension_dir = /usr/lib/php/$MM" >>$Top/etc/php/php.ini
test -d ext/opcache && echo "zend_extension = opcache.so" >>$Top/etc/php/php.ini
if [ "$MM" ]; then
    mkdir $Top/etc/php/$MM
    mv $Top/etc/php/php.ini $Top/etc/php/$MM
    (cd $Top/usr/bin
     mv php php$MM
     mv phpdbg phpdbg$MM
     if [ -e phar ]; then
	mv phar.phar phar$MM.phar
    	ln -sf phar$MM.phar phar$MM
	rm phar
     fi
     cd $Top/$ManDir/man1
     mv php.1.gz php$MM.1.gz
     mv phpdbg.1.gz phpdbg$MM.1.gz
     mv phar.1.gz phar$MM.1.gz
     mv phar.phar.1.gz phar$MM.phar.1.gz
    )
    (cd $Top/usr/lib/php; mv extensions $MM)
    sed -i -e "s/%MM%/$MM/g" -e "s/%PRI%/`echo $MM | tr -d .`/" $Top/DEBIAN/postinst
    sed -i "s/%MM%/$MM/g" $Top/DEBIAN/prerm
    mkdir -p $Top/usr/lib/epi-php$MMD
    if [ $Maj -ge 7 ]; then
	mv $Top/usr/lib/epi-php/prepend.d $Top/usr/lib/epi-php$MMD
    else
	rm -r $Top/usr/lib/epi-php
    fi
else
    #   Declare as Conflicts all other supported versions
    for v in $SupVer
    do
	test "$v" != "$MajMin" && Cfl="$Cfl, $Base-$v-$Pkg"
    done
    rm -v $Top/DEBIAN/p* >>$Logs/rmed_$Pkg.out
fi
sed -i "s;%MMD%;$MMD;" $Top/DEBIAN/conffiles
sed -i "s/%CFL%/$Cfl/" $Top/DEBIAN/control
test "$Dbg" && cp $Top/DEBIAN/control $Debug/control_$Pkg

#   Adapt lintian/overrides to lintian (i.e. Debian) version
if [ $DEBNUM -gt 9 ]; then
    echo "/phar is included/-1,/phpX-cli/d\nw" | ed - $Top/usr/share/lintian/overrides/$Name
elif [ $DEBNUM -gt 8 ]; then
    sed -i 's/phpX-cli/php-cli/' $Top/usr/share/lintian/overrides/$Name
fi
